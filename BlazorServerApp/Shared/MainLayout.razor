@inherits BlazorServerApp.Layouts.MainLayoutComponent

@using Radzen
@using Radzen.Blazor
@using BlazorServerApp.Pages
@using BlazorServerApp.Data
@inject LoginInfoService LoginInfoService

<RadzenDialog />
<RadzenNotification />
<RadzenTooltip />
<RadzenContextMenu />

<RadzenBody style="margin-left: 0px" Visible=@IsLogin>
    <ChildContent>
        <div class="row justify-content-center">
            <div class="justify-content-center col-xl-5 col-md-7">
                <RadzenCard class="d-flex p-0 rz-border-radius-4 rz-shadow-10 " Style="margin-top: 8rem; width: 100%; flex-direction: column; overflow: hidden; align-items: stretch;">
                    <RadzenCard Class="rz-shadow-0 rz-border-radius-0 rz-background-color-info p-5" style="text-align: center;">
                        <RadzenText TextStyle="TextStyle.DisplayH3" TagName="TagName.H2" Class="rz-color-white mb-0">Login</RadzenText>
                    </RadzenCard>
                    <RadzenCard Class="rz-shadow-0 p-5">
                        <RadzenTemplateForm Data=@("SimpleLogin")>
                            <RadzenLogin AllowRegister="false" AllowResetPassword="true" Login=@(args => OnLogin(args))  />
                        </RadzenTemplateForm>
                    </RadzenCard>
                </RadzenCard>
            </div>
        </div>
    </ChildContent>
</RadzenBody>

<RadzenLayout Visible=@(!IsLogin)>
    <ChildContent>
        <RadzenHeader>
            <ChildContent>
                <div class="row justify-content-start align-items-center">
                    <div class="col-6 d-flex align-items-center">
                        <RadzenSidebarToggle Click="@SidebarToggle0Click">
                        </RadzenSidebarToggle>
                        <RadzenLabel Text="BlazorServerApp">
                        </RadzenLabel>
                    </div>
                    <div class="col-6 text-right">
                    </div>
                </div>
            </ChildContent>
        </RadzenHeader>
        <RadzenBody @ref="body0">
            <ChildContent>
                <RadzenContentContainer Name="main">
                    @Body
                </RadzenContentContainer>
            </ChildContent>
        </RadzenBody>
        <RadzenSidebar @ref="sidebar0">
            <ChildContent>
                <RadzenPanelMenu style="height: 100%;">
                    <ChildContent>
                        <RadzenPanelMenuItem Icon="home" Text="Home" Path="/">
                        </RadzenPanelMenuItem>
                        <RadzenPanelMenuItem Icon="" Text="Counter" Path="/counter">
                        </RadzenPanelMenuItem>
                        <RadzenPanelMenuItem Icon="" Text="Fetch data" Path="/fetchdata">
                        </RadzenPanelMenuItem>
                    </ChildContent>
                </RadzenPanelMenu>
            </ChildContent>
        </RadzenSidebar>
        <RadzenFooter>
            <ChildContent>
                <RadzenLabel Text="BlazorServerApp, Copyright Ⓒ 2022">
                </RadzenLabel>
            </ChildContent>
        </RadzenFooter>
    </ChildContent>
</RadzenLayout>

@code {
    bool IsLogin = true;
    async Task OnLogin(LoginArgs args)
    {
        var allUser = await LoginInfoService.GetLoginInfoAsync();
        var getUser = allUser.Where(x => x.UserName == args.Username && x.Password == args.Password);
        if (getUser.Any())
        {
            // ユーザーが取得できたためLogin
            IsLogin = false;
        }
        else
        {
            // ユーザーが取得できなかったためNG
        }
    }
}